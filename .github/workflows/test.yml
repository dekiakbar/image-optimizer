name: test

on: [push]

jobs:
  unit:
    name: Unit Test
    runs-on: ubuntu-latest
    env:
      PORT: ${{ secrets.PORT }}
      STORAGE_TYPE: ${{ secrets.STORAGE_TYPE }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      S3_REGION: ${{ secrets.S3_REGION }}
      S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
      S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      IMAGEKIT_PUBLIC_KEY: ${{ secrets.IMAGEKIT_PUBLIC_KEY }}
      IMAGEKIT_PRIVATE_KEY: ${{ secrets.IMAGEKIT_PRIVATE_KEY }}
      URL_ENDPOINT: ${{ secrets.URL_ENDPOINT }}
      ALLOWED_FILE_TYPE: ${{ secrets.ALLOWED_FILE_TYPE }}
      MAX_FILE_UPLOAD: ${{ secrets.MAX_FILE_UPLOAD }}
      MAX_UPLOAD_SIZE: ${{ secrets.MAX_UPLOAD_SIZE }}
    steps:
      - uses: actions/checkout@v3
      - name: install node lts (gallium)
        uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
      - name: npm install
        run: npm install
      - name: unit tests
        run: npm run test
      - name: generate codecov report
        run: npm run test:cov
      - name: upload report to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  e2e:
    name: End to end Test
    runs-on: ubuntu-latest
    env:
      PORT: ${{ secrets.PORT }}
      STORAGE_TYPE: ${{ secrets.STORAGE_TYPE }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      S3_REGION: ${{ secrets.S3_REGION }}
      S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
      S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      IMAGEKIT_PUBLIC_KEY: ${{ secrets.IMAGEKIT_PUBLIC_KEY }}
      IMAGEKIT_PRIVATE_KEY: ${{ secrets.IMAGEKIT_PRIVATE_KEY }}
      URL_ENDPOINT: ${{ secrets.URL_ENDPOINT }}
      ALLOWED_FILE_TYPE: ${{ secrets.ALLOWED_FILE_TYPE }}
      MAX_FILE_UPLOAD: ${{ secrets.MAX_FILE_UPLOAD }}
      MAX_UPLOAD_SIZE: ${{ secrets.MAX_UPLOAD_SIZE }}
    steps:
      - uses: actions/checkout@v3
      - name: install node lts (gallium)
        uses: actions/setup-node@v3
        with:
          node-version: lts/gallium
      - name: npm install
        run: npm install
      - name: end to end test
        run: npm run test:e2e